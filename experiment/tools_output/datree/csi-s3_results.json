{"policyValidationResults":[{"fileName":"/home/kubuntu/Documents/GitHub/SPHERE-REE/experiment/templates/csi-s3_template.yaml","ruleResults":[{"identifier":"CONTAINERS_MISSING_MEMORY_LIMIT_KEY","name":"Ensure each container has a configured memory limit","messageOnFailure":"Missing property object `limits.memory` - value should be within the accepted boundaries recommended by the organization","occurrencesDetails":[{"metadataName":"csi-s3","kind":"DaemonSet","skipMessage":"","occurrences":2,"isSkipped":false,"failureLocations":[{"schemaPath":"/spec/template/spec/containers/0","failedErrorLine":133,"failedErrorColumn":11},{"schemaPath":"/spec/template/spec/containers/1","failedErrorLine":153,"failedErrorColumn":11}],"validationFailureMessages":null},{"metadataName":"csi-s3-provisioner","kind":"StatefulSet","skipMessage":"","occurrences":2,"isSkipped":false,"failureLocations":[{"schemaPath":"/spec/template/spec/containers/0","failedErrorLine":230,"failedErrorColumn":11},{"schemaPath":"/spec/template/spec/containers/1","failedErrorLine":242,"failedErrorColumn":11}],"validationFailureMessages":null}]},{"identifier":"CONTAINERS_INCORRECT_READONLYROOTFILESYSTEM_VALUE","name":"Ensure each container has a read-only root filesystem","messageOnFailure":"Incorrect value for key `readOnlyRootFilesystem` - set to 'true' to protect filesystem from potential attacks","occurrencesDetails":[{"metadataName":"csi-s3","kind":"DaemonSet","skipMessage":"","occurrences":2,"isSkipped":false,"failureLocations":[{"schemaPath":"/spec/template/spec/containers/0","failedErrorLine":133,"failedErrorColumn":11},{"schemaPath":"/spec/template/spec/containers/1/securityContext","failedErrorLine":155,"failedErrorColumn":13}],"validationFailureMessages":null},{"metadataName":"csi-s3-provisioner","kind":"StatefulSet","skipMessage":"","occurrences":2,"isSkipped":false,"failureLocations":[{"schemaPath":"/spec/template/spec/containers/0","failedErrorLine":230,"failedErrorColumn":11},{"schemaPath":"/spec/template/spec/containers/1","failedErrorLine":242,"failedErrorColumn":11}],"validationFailureMessages":null}]},{"identifier":"CONTAINERS_INCORRECT_KEY_HOSTPATH","name":"Prevent containers from accessing underlying host","messageOnFailure":"Invalid key `hostPath` - refrain from using this mount to prevent an attack on the underlying host","occurrencesDetails":[{"metadataName":"csi-s3","kind":"DaemonSet","skipMessage":"","occurrences":6,"isSkipped":false,"failureLocations":[{"schemaPath":"/spec/template/spec/volumes/0","failedErrorLine":186,"failedErrorColumn":11},{"schemaPath":"/spec/template/spec/volumes/1","failedErrorLine":190,"failedErrorColumn":11},{"schemaPath":"/spec/template/spec/volumes/2","failedErrorLine":194,"failedErrorColumn":11},{"schemaPath":"/spec/template/spec/volumes/3","failedErrorLine":198,"failedErrorColumn":11},{"schemaPath":"/spec/template/spec/volumes/4","failedErrorLine":202,"failedErrorColumn":11},{"schemaPath":"/spec/template/spec/volumes/5","failedErrorLine":205,"failedErrorColumn":11}],"validationFailureMessages":null}]},{"identifier":"CONTAINERS_MISSING_KEY_ALLOWPRIVILEGEESCALATION","name":"Prevent containers from escalating privileges","messageOnFailure":"Missing key `allowPrivilegeEscalation` - set to false to prevent attackers from exploiting escalated container privileges","occurrencesDetails":[{"metadataName":"csi-s3","kind":"DaemonSet","skipMessage":"","occurrences":2,"isSkipped":false,"failureLocations":[{"schemaPath":"/spec/template/spec/containers/0","failedErrorLine":133,"failedErrorColumn":11},{"schemaPath":"/spec/template/spec/containers/1/securityContext/allowPrivilegeEscalation","failedErrorLine":158,"failedErrorColumn":39}],"validationFailureMessages":null},{"metadataName":"csi-s3-provisioner","kind":"StatefulSet","skipMessage":"","occurrences":2,"isSkipped":false,"failureLocations":[{"schemaPath":"/spec/template/spec/containers/0","failedErrorLine":230,"failedErrorColumn":11},{"schemaPath":"/spec/template/spec/containers/1","failedErrorLine":242,"failedErrorColumn":11}],"validationFailureMessages":null}]},{"identifier":"WORKLOAD_INCORRECT_NAMESPACE_VALUE_DEFAULT","name":"Prevent workload from using the default namespace","messageOnFailure":"Incorrect value for key `namespace` - use an explicit namespace instead of the default one (`default`)","occurrencesDetails":[{"metadataName":"csi-s3","kind":"DaemonSet","skipMessage":"","occurrences":1,"isSkipped":false,"failureLocations":[{"schemaPath":"/metadata/namespace","failedErrorLine":120,"failedErrorColumn":14}],"validationFailureMessages":null},{"metadataName":"csi-s3-provisioner","kind":"StatefulSet","skipMessage":"","occurrences":1,"isSkipped":false,"failureLocations":[{"schemaPath":"/metadata/namespace","failedErrorLine":215,"failedErrorColumn":14}],"validationFailureMessages":null}]},{"identifier":"CONTAINERS_MISSING_MEMORY_REQUEST_KEY","name":"Ensure each container has a configured memory request","messageOnFailure":"Missing property object `requests.memory` - value should be within the accepted boundaries recommended by the organization","occurrencesDetails":[{"metadataName":"csi-s3","kind":"DaemonSet","skipMessage":"","occurrences":2,"isSkipped":false,"failureLocations":[{"schemaPath":"/spec/template/spec/containers/0","failedErrorLine":133,"failedErrorColumn":11},{"schemaPath":"/spec/template/spec/containers/1","failedErrorLine":153,"failedErrorColumn":11}],"validationFailureMessages":null},{"metadataName":"csi-s3-provisioner","kind":"StatefulSet","skipMessage":"","occurrences":2,"isSkipped":false,"failureLocations":[{"schemaPath":"/spec/template/spec/containers/0","failedErrorLine":230,"failedErrorColumn":11},{"schemaPath":"/spec/template/spec/containers/1","failedErrorLine":242,"failedErrorColumn":11}],"validationFailureMessages":null}]},{"identifier":"CONTAINERS_MISSING_LIVENESSPROBE_KEY","name":"Ensure each container has a configured liveness probe","messageOnFailure":"Missing property object `livenessProbe` - add a properly configured livenessProbe to catch possible deadlocks","occurrencesDetails":[{"metadataName":"csi-s3","kind":"DaemonSet","skipMessage":"","occurrences":2,"isSkipped":false,"failureLocations":[{"schemaPath":"/spec/template/spec/containers/0","failedErrorLine":133,"failedErrorColumn":11},{"schemaPath":"/spec/template/spec/containers/1","failedErrorLine":153,"failedErrorColumn":11}],"validationFailureMessages":null},{"metadataName":"csi-s3-provisioner","kind":"StatefulSet","skipMessage":"","occurrences":2,"isSkipped":false,"failureLocations":[{"schemaPath":"/spec/template/spec/containers/0","failedErrorLine":230,"failedErrorColumn":11},{"schemaPath":"/spec/template/spec/containers/1","failedErrorLine":242,"failedErrorColumn":11}],"validationFailureMessages":null}]},{"identifier":"CONTAINERS_MISSING_READINESSPROBE_KEY","name":"Ensure each container has a configured readiness probe","messageOnFailure":"Missing property object `readinessProbe` - add a properly configured readinessProbe to notify kubelet your Pods are ready for traffic","occurrencesDetails":[{"metadataName":"csi-s3","kind":"DaemonSet","skipMessage":"","occurrences":2,"isSkipped":false,"failureLocations":[{"schemaPath":"/spec/template/spec/containers/0","failedErrorLine":133,"failedErrorColumn":11},{"schemaPath":"/spec/template/spec/containers/1","failedErrorLine":153,"failedErrorColumn":11}],"validationFailureMessages":null},{"metadataName":"csi-s3-provisioner","kind":"StatefulSet","skipMessage":"","occurrences":2,"isSkipped":false,"failureLocations":[{"schemaPath":"/spec/template/spec/containers/0","failedErrorLine":230,"failedErrorColumn":11},{"schemaPath":"/spec/template/spec/containers/1","failedErrorLine":242,"failedErrorColumn":11}],"validationFailureMessages":null}]}]}],"policySummary":{"policyName":"Starter","totalRulesInPolicy":34,"totalSkippedRules":0,"totalRulesFailed":8,"totalPassedCount":26},"evaluationSummary":{"configsCount":12,"filesCount":1,"passedYamlValidationCount":1,"k8sValidation":"1/1","passedPolicyValidationCount":0},"yamlValidationResults":null,"k8sValidationResults":null,"loginUrl":""}
